<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${generator.packageName}.mapper#if(${generator.subModule}).${generator.subModuleName}#end.${table.tableModuleName}Mapper">
    <resultMap id="${table.tableModuleName2}Map" type="${generator.entityPackageName}.entity#if(${generator.subModule}).${generator.subModuleName}#end.${table.tableModuleName}Entity">
#foreach($field in ${fields})
    #if(${field.idFlg})
        <id column="${field.columnName}" property="${field.propertyName}"></id>
    #else
        <result column="${field.columnName}" property="${field.propertyName}"></result>
    #end
#end
    </resultMap>

    <sql id="${table.tableModuleName2}Col">
     #foreach($field in ${fields})
        #if($foreach.count != ${fields.size()})
            ${field.columnName},
        #else
            ${field.columnName}
        #end
     #end
    </sql>

    <select id="query${table.tableModuleName}Count" resultType="int">
        select count(*) from ${table.tableName}
        <include refid="${table.tableModuleName2}Where"/>
    </select>

    <select id="query${table.tableModuleName}List" resultMap="${table.tableModuleName2}Map">
        select
        <include refid="${table.tableModuleName2}Col"/>
        from ${table.tableName}
        <include refid="${table.tableModuleName2}Where"/>
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <sql id="${table.tableModuleName2}Where">
        <where>
    #foreach($field in ${fields})
        #if(${field.operateType} == 1 )
            <if test="${field.propertyName} != null and ${field.propertyName} != '' ">
                and ${field.columnName} = #{${field.propertyName}}
            </if>
        #end
        #if(${field.operateType} == 2)
            <if test="${field.propertyName} != null ">
                and ${field.columnName} = #{${field.propertyName}}
            </if>
        #end
        #if(${field.operateType} == 3)
            <if test="${field.propertyName}Start != null and ${field.propertyName}Start != ''">
                and ${field.columnName} &gt;= #{${field.propertyName}Start}
            </if>
            <if test="${field.propertyName}End != null and ${field.propertyName}End != ''">
                and ${field.columnName} &lt;= #{${field.propertyName}End}
            </if>
        #end
    #end
        #if(${table.priColumn})
            <if test="${table.priColumn.propertyName}s != null and ${table.priColumn.propertyName}s.size() > 0 ">
                and ${table.priColumn.columnName} in
                <foreach collection="${table.priColumn.propertyName}s" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        #end
        </where>
    </sql>

    <select id="get${table.tableModuleName}ById" resultMap="${table.tableModuleName2}Map">
        select
        <include refid="${table.tableModuleName2}Col"/>
        from ${table.tableName} where ${table.priColumn.columnName} = #{${table.priColumn.propertyName}}
    </select>

    <insert id="insert${table.tableModuleName}" parameterType="${generator.entityPackageName}.entity#if(${generator.subModule}).${generator.subModuleName}#end.${table.tableModuleName}Entity" #if(${table.autoIncrementFlg})useGeneratedKeys="true" keyProperty="${table.priColumn.columnName}"#end>
        insert into ${table.tableName}
        <trim suffixOverrides="," prefix="(" suffix=")">
    #foreach($field in ${fields})
            <if test="${field.propertyName} != null">
                #if($foreach.count != ${fields.size()})
                    ${field.columnName},
                #else
                    ${field.columnName}
                #end
            </if>
    #end
        </trim>
        values
        <trim suffixOverrides="," prefix="(" suffix=")">
    #foreach($field in ${fields})
            <if test="${field.propertyName} != null">
                #if($foreach.count != ${fields.size()})
                    #{${field.propertyName}},
                #else
                    #{${field.propertyName}}
                #end
            </if>
    #end
        </trim>
    </insert>

    <insert id="batchInsert${table.tableModuleName}">
        insert into ${table.tableName} (#foreach($field in ${fields})
        #if($foreach.count != ${fields.size()})
            ${field.columnName},
        #else
            ${field.columnName}#end#end)
        values
        <foreach collection="${table.tableModuleName2}Entitys" item="item" separator=",">
            (#foreach($field in ${fields})
        #if($foreach.count != ${fields.size()})
            #{item.${field.propertyName}},
        #else
            #{item.${field.propertyName}}#end
        #end)
        </foreach>
    </insert>

    <update id="update${table.tableModuleName}">
        update ${table.tableName}
        <set>
        #foreach($field in ${fields})
          #if(!${field.idFlg} and !${field.updateFlg})
            <if test="${field.propertyName} != null ">
                ${field.columnName} = #{${field.propertyName}},
            </if>
          #end
        #end
        </set>
        where ${table.priColumn.columnName} = #{${table.priColumn.propertyName}}
    </update>

#if(${table.deleteColumn})
    <update id="delete${table.tableModuleName}">
        update ${table.tableName} set ${table.deleteColumn.columnName} = ${generator.deleteValue}
    #if(${table.updateUserColumn})
        <if test="${table.updateUserColumn.propertyName} != null and ${table.updateUserColumn.propertyName} != ''">
            ,${table.updateUserColumn.columnName} = #{${table.updateUserColumn.propertyName}}
        </if>
    #end
    #if(${table.updateTimeColumn})
        <if test="${table.updateTimeColumn.propertyName} != null ">
            ,${table.updateTimeColumn.columnName} = #{${table.updateTimeColumn.propertyName}}
        </if>
    #end
        where ${table.priColumn.columnName} in
        <foreach collection="${table.priColumn.propertyName}s" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>
#else
    <delete id="delete${table.tableModuleName}">
        delete from ${table.tableName} where ${table.priColumn.columnName} in
        <foreach collection="${table.priColumn.propertyName}s" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
#end
</mapper>